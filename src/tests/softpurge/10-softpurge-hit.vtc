varnishtest "Test softpurge vmod"

server s1 {
	rxreq
	txresp

	# the purge restart target, avoiding vcl_error error which closes connection.
	rxreq
	txresp

	rxreq
	txresp

	rxreq
	txresp
} -start

varnish v1 -vcl+backend {
	import softpurge from "${vmod_builddir}/.libs/libvmod_softpurge.so";

	backend b1 {
		.host = "${s1_addr}";
		.port = "${s1_port}";
	}

	backend b2 {
		.host = "127.0.0.1";
		.port = "12313";
		# Keep this for better results in having the backend marked as sick. ;-)
		.probe = {
			.initial = 0;
		}
	}

	sub vcl_recv {
		set req.http.grace = "none";
		set req.backend_hint = b1;
		if (req.http.x-sick-please) { set req.backend_hint = b2; }
		if (req.method == "PURGE") {
			return(hash);
		}
	}

	sub vcl_backend_response {
		set beresp.ttl = 1s;
		set beresp.grace = 1h;
	}

	sub vcl_miss {
		set req.http.x-via = "miss";

	}

	sub vcl_hit {
		set req.http.x-via = "hit";
		if (req.method == "PURGE") {
			softpurge.softpurge();
			set req.url = "/exists";
			set req.method = "GET";
			set req.http.x-via = "hit";
			set req.http.x-msg = "softpurge";
			return(deliver);
		}
	}

	sub vcl_deliver {
 	    	set resp.http.grace = req.http.grace;
		set resp.http.backend = req.http.backend;
		set resp.http.x-via = req.http.x-via;
		set resp.http.x-msg = req.http.x-msg;
	}

} -start


# Warm the cache
client c1 {
	txreq -url "/"
	rxresp

	txreq -url "/"
	rxresp
	expect resp.status == 200
	expect resp.http.x-via == "hit"
} -run

# Softpurge the object.
client c1 {
	txreq -req "PURGE" -url "/"
	rxresp
	expect resp.http.x-via == "hit"
	expect resp.http.x-msg == "softpurge"
} -run

# Pretend backend is dead, should give a graced hit.
client c2 {
	txreq -url "/" -hdr "x-sick-please: yes"
	rxresp
	expect obj.grace != 0
	expect resp.http.x-via == "hit"

} -run

# check that it has been purged for normal requests.
# this will be a graced hit.
client c3 {
	txreq -url "/"
	rxresp
	expect resp.http.x-via == "hit"
	expect resp.status == 200
	expect obj.grace != 0
} -run
