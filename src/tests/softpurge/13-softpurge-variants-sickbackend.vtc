varnishtest "Test softpurge vmod"

server s1 {
	rxreq
	txresp -hdr "Vary: User-Agent"
} -repeat 6 -start

varnish v1 -vcl+backend {
	import softpurge from "${vmod_builddir}/.libs/libvmod_softpurge.so";
	#import std;

	backend b1 {
		.host = "${s1_addr}";
		.port = "${s1_port}";
	}

	# always sick
	backend b2 {
		.host = "127.0.0.1";
		.port = "12313";
		# Keep this for better results in having the backend marked as sick. ;-)
		.probe = {
			.initial = 0;
		}
	}

	sub purge_and_restart {
		softpurge.softpurge();
		set req.url = "/exists";
		set req.method = "GET";
		unset req.http.x-via;
		return(restart);
	}

	sub vcl_recv {
		set req.backend_hint = b1;
		if (req.http.x-sick-please) { set req.backend_hint = b2; }

		if (req.method == "PURGE") { return(hash); }
	}

	sub vcl_backend_response {
		set beresp.ttl = 1s;
		set beresp.grace = 10m;

		#set req.http.x-ttl = beresp.ttl;
		#set req.http.x-grace = beresp.grace;
	}

	sub vcl_miss {
		#std.log("inside vcl_miss");
		set req.http.x-via = "miss";
		if (req.method == "PURGE") { call purge_and_restart; }
	}

	sub vcl_hit {
		#std.log("inside vcl_hit");
		set req.http.x-via = "hit";
		if (req.method == "PURGE") { call purge_and_restart; }

		# There is no greater-than in the test language. (?)
		if (obj.ttl < 0s) { set req.http.x-ttl-negative = true; }
		else { set req.http.x-ttl-negative = false; }

		set req.http.x-ttl = obj.ttl;
		set req.http.x-grace = obj.grace;
	}

	sub vcl_deliver {
		set resp.http.x-object-hits = obj.hits;
		set resp.http.x-object-ttl     = req.http.x-ttl;
		set resp.http.x-object-grace   = req.http.x-grace;

		set resp.http.x-via = req.http.x-via;

		set resp.http.x-ttl-negative = req.http.x-ttl-negative;
	}
} -start


client c1 {
	txreq -url "/" -hdr "User-Agent: one"
	rxresp
	expect resp.status == 200
	expect resp.http.x-via == "miss"

	txreq -url "/" -hdr "User-Agent: two"
	rxresp
	expect resp.status == 200
	expect resp.http.x-via == "miss"

	txreq -url "/" -hdr "User-Agent: one"
	rxresp
	expect resp.status == 200
	expect resp.http.x-via == "hit"

	txreq -req "PURGE" -url "/" -hdr "User-Agent: one"
	rxresp

	# if the backend is sick, is the content still there?
	txreq -url "/" -hdr "User-Agent: two" -hdr "x-sick-please: yes"
	rxresp
	expect resp.http.x-via == "hit"
	expect resp.status == 200

	# if the backend is sick, is the content still there?
	txreq -url "/" -hdr "User-Agent: one" -hdr "x-sick-please: yes"
	rxresp
	expect resp.http.x-via == "hit"
	expect resp.status == 200

	txreq -url "/" -hdr "User-Agent: one"
	rxresp
	expect resp.http.x-via == "hit"
	expect resp.status == 200
} -run
